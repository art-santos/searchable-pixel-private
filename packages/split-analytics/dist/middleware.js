"use strict";var u=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var A=(t,e)=>{for(var a in e)u(t,a,{get:e[a],enumerable:!0})},b=(t,e,a,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of f(e))!w.call(t,n)&&n!==a&&u(t,n,{get:()=>e[n],enumerable:!(r=h(e,n))||r.enumerable});return t};var k=t=>b(u({},"__esModule",{value:!0}),t);var P={};A(P,{createSplitMiddleware:()=>C,trackCrawlerVisit:()=>x});module.exports=k(P);var m=require("next/server");var S={GPTBot:{name:"GPTBot",company:"OpenAI",category:"ai-training"},"ChatGPT-User":{name:"ChatGPT-User",company:"OpenAI",category:"ai-assistant"},"OAI-SearchBot":{name:"OAI-SearchBot",company:"OpenAI",category:"ai-search"},"Claude-Web":{name:"Claude-Web",company:"Anthropic",category:"ai-assistant"},ClaudeBot:{name:"ClaudeBot",company:"Anthropic",category:"ai-training"},"anthropic-ai":{name:"anthropic-ai",company:"Anthropic",category:"ai-training"},"Google-Extended":{name:"Google-Extended",company:"Google",category:"ai-training"},Googlebot:{name:"Googlebot",company:"Google",category:"search-ai"},"Googlebot-Image":{name:"Googlebot-Image",company:"Google",category:"search-ai"},"Googlebot-News":{name:"Googlebot-News",company:"Google",category:"search-ai"},Bingbot:{name:"Bingbot",company:"Microsoft",category:"search-ai"},msnbot:{name:"msnbot",company:"Microsoft",category:"search-ai"},BingPreview:{name:"BingPreview",company:"Microsoft",category:"search-ai"},PerplexityBot:{name:"PerplexityBot",company:"Perplexity",category:"ai-search"},FacebookBot:{name:"FacebookBot",company:"Meta",category:"social-ai"},facebookexternalhit:{name:"facebookexternalhit",company:"Meta",category:"social-ai"},"Meta-ExternalAgent":{name:"Meta-ExternalAgent",company:"Meta",category:"ai-training"},YouBot:{name:"YouBot",company:"You.com",category:"ai-search"},Neeva:{name:"Neeva",company:"Neeva",category:"ai-search"},Phind:{name:"Phind",company:"Phind",category:"ai-search"},Bytespider:{name:"Bytespider",company:"ByteDance",category:"ai-training"},Baiduspider:{name:"Baiduspider",company:"Baidu",category:"search-ai"},Sogou:{name:"Sogou",company:"Sogou",category:"search-ai"},Amazonbot:{name:"Amazonbot",company:"Amazon",category:"ai-assistant"},LinkedInBot:{name:"LinkedInBot",company:"LinkedIn",category:"social-ai"},Twitterbot:{name:"Twitterbot",company:"Twitter",category:"social-ai"},Applebot:{name:"Applebot",company:"Apple",category:"search-ai"},"Applebot-Extended":{name:"Applebot-Extended",company:"Apple",category:"ai-training"},Diffbot:{name:"Diffbot",company:"Diffbot",category:"ai-extraction"},DataForSeoBot:{name:"DataForSeoBot",company:"DataForSEO",category:"ai-extraction"},SemrushBot:{name:"SemrushBot",company:"Semrush",category:"ai-extraction"},AhrefsBot:{name:"AhrefsBot",company:"Ahrefs",category:"ai-extraction"},CCBot:{name:"CCBot",company:"Common Crawl",category:"ai-training"},ia_archiver:{name:"ia_archiver",company:"Internet Archive",category:"archival"},PetalBot:{name:"PetalBot",company:"Petal Search",category:"search-ai"},SeznamBot:{name:"SeznamBot",company:"Seznam",category:"search-ai"},Yandex:{name:"YandexBot",company:"Yandex",category:"search-ai"},DuckDuckBot:{name:"DuckDuckBot",company:"DuckDuckGo",category:"search-ai"},Qwantify:{name:"Qwantify",company:"Qwant",category:"search-ai"}};function l(t){if(!t)return null;for(let[e,a]of Object.entries(S))if(t.includes(e))return a;return null}var p=class{constructor(e){if(!e.apiKey)throw new Error("[Split Analytics] API key is required");if(!e.apiKey.startsWith("split_live_")&&!e.apiKey.startsWith("split_test_"))throw new Error('[Split Analytics] Invalid API key format. Keys should start with "split_live_" or "split_test_"');this.config={apiKey:e.apiKey,apiEndpoint:e.apiEndpoint||(process.env.NODE_ENV==="development"?"http://localhost:3000/api":"https://split.dev/api"),debug:e.debug||!1},this.config.debug&&console.log("[Split Analytics] Initialized with:",{endpoint:this.config.apiEndpoint,keyType:e.apiKey.startsWith("split_test_")?"test":"live",debug:this.config.debug})}async ping(){try{if(!this.config.apiKey.startsWith("split_live_")&&!this.config.apiKey.startsWith("split_test_"))return{status:"error",message:'Invalid API key format. Keys should start with "split_live_" or "split_test_"'};let e=await fetch(`${this.config.apiEndpoint}/ping`,{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json","User-Agent":"@split.dev/analytics npm package"}});if(!e.ok){let r;try{let n=await e.json();r=n.message||n.error||`HTTP ${e.status}`}catch{switch(e.status){case 401:r="Invalid API key. Check your key in the Split Analytics dashboard.";case 403:r="API key access denied. Verify your key has the correct permissions.";break;case 404:r="API endpoint not found. This might be a temporary issue with the Split Analytics service.";break;case 429:r="Rate limit exceeded. Please wait a moment and try again.";break;case 500:r="Split Analytics server error. Please try again later.";break;default:r=`HTTP ${e.status}: ${e.statusText}`}}return this.config.debug&&console.error("[Split Analytics] Ping failed:",{status:e.status,statusText:e.statusText,url:`${this.config.apiEndpoint}/ping`,apiKeyPrefix:this.config.apiKey.substring(0,12)+"..."}),{status:"error",message:r}}let a=await e.json();return this.config.debug&&console.log("[Split Analytics] Ping successful:",a),a}catch(e){let a;return e instanceof TypeError&&e.message.includes("fetch")?a="Network error: Unable to connect to Split Analytics. Check your internet connection.":e instanceof Error?a=`Connection error: ${e.message}`:a="Unknown connection error",this.config.debug&&console.error("[Split Analytics] Ping failed:",{error:e,endpoint:`${this.config.apiEndpoint}/ping`,apiKeyPrefix:this.config.apiKey.substring(0,12)+"..."}),{status:"error",message:a,timestamp:new Date().toISOString()}}}async track(e){try{let a={...e,timestamp:new Date().toISOString()};this.config.debug&&console.log("[Split Analytics] Tracking visit:",{url:a.url,crawler:a.crawler?.name,userAgent:a.userAgent.substring(0,50)+"..."});let r=await fetch(`${this.config.apiEndpoint}/crawler-events`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json","User-Agent":"@split.dev/analytics npm package"},body:JSON.stringify({events:[a]})});return r.ok?(this.config.debug&&console.log("[Split Analytics] Successfully tracked:",a.crawler?.name||"unknown crawler"),!0):(this.config.debug&&console.error("[Split Analytics] Track failed:",{status:r.status,statusText:r.statusText,url:a.url,crawler:a.crawler?.name}),!1)}catch(a){return this.config.debug&&console.error("[Split Analytics] Track error:",{error:a instanceof Error?a.message:a,url:e.url,crawler:e.crawler?.name}),!1}}async autoTrack(e){let a=l(e.userAgent);return a?(this.config.debug&&console.log("[Split Analytics] Auto-detected crawler:",a.name),this.track({url:e.url,userAgent:e.userAgent||"",crawler:a,metadata:{method:e.method,statusCode:e.statusCode,responseTime:e.responseTime}})):(this.config.debug&&console.log("[Split Analytics] No crawler detected in user agent:",e.userAgent?.substring(0,50)+"..."),!1)}isAICrawler(e){return l(e)!==null}getCrawlerInfo(e){return l(e)}};function y(t){return l(t)!==null}function d(t){return l(t)}function C(t){if(!t.apiKey)throw new Error("[Split Analytics Middleware] API key is required");if(!t.apiKey.startsWith("split_live_")&&!t.apiKey.startsWith("split_test_"))throw new Error('[Split Analytics Middleware] Invalid API key format. Keys should start with "split_live_" or "split_test_"');let e=new p(t);return t.debug&&console.log("[Split Analytics Middleware] Initialized with:",{keyType:t.apiKey.startsWith("split_test_")?"test":"live",excludePatterns:t.exclude?.length||0,includePatterns:t.include?.length||0,skipTracking:t.skipTracking||!1}),async function(r){let n=m.NextResponse.next();try{let{pathname:o}=r.nextUrl,g=r.headers.get("user-agent");if(t.debug&&console.log("[Split Analytics Middleware] Processing request:",{pathname:o,userAgent:g?.substring(0,50)+"...",method:r.method}),t.skipTracking)return t.debug&&console.log("[Split Analytics Middleware] Skipping tracking (skipTracking=true)"),n;if(t.exclude)for(let i of t.exclude)try{if(o.match(i))return t.debug&&console.log("[Split Analytics Middleware] Path excluded by pattern:",i),n}catch(s){t.debug&&console.error("[Split Analytics Middleware] Invalid exclude pattern:",i,s)}if(t.include&&t.include.length>0){let i=!1;for(let s of t.include)try{if(o.match(s)){i=!0;break}}catch(c){t.debug&&console.error("[Split Analytics Middleware] Invalid include pattern:",s,c)}if(!i)return t.debug&&console.log("[Split Analytics Middleware] Path not included by any pattern"),n}if(y(g)){let i=d(g);i&&(t.debug&&console.log("[Split Analytics Middleware] AI crawler detected:",{name:i.name,company:i.company,category:i.category}),setImmediate(async()=>{let s=Date.now();try{let c=await e.track({url:r.url,userAgent:g||"",crawler:i,metadata:{method:r.method,pathname:o,timestamp:new Date().toISOString(),responseTime:Date.now()-s}});t.debug&&console.log("[Split Analytics Middleware] Tracking result:",c?"success":"failed")}catch(c){t.debug&&console.error("[Split Analytics Middleware] Tracking error:",c)}}))}else t.debug&&console.log("[Split Analytics Middleware] Not an AI crawler, skipping");return n}catch(o){return t.debug&&console.error("[Split Analytics Middleware] Unexpected error:",o),n}}}async function x(t,e){try{let a=t.headers.get("user-agent");if(!y(a))return e.debug&&console.log("[Split Analytics] trackCrawlerVisit: Not an AI crawler"),!1;let r=new p(e),n=d(a);if(!n)return e.debug&&console.log("[Split Analytics] trackCrawlerVisit: No crawler info found"),!1;e.debug&&console.log("[Split Analytics] trackCrawlerVisit: Tracking",n.name);let o=await r.track({url:t.url,userAgent:a||"",crawler:n,metadata:{method:t.method,pathname:t.nextUrl.pathname,timestamp:new Date().toISOString()}});return e.debug&&console.log("[Split Analytics] trackCrawlerVisit: Result",o?"success":"failed"),o}catch(a){return e.debug&&console.error("[Split Analytics] trackCrawlerVisit: Error",a),!1}}0&&(module.exports={createSplitMiddleware,trackCrawlerVisit});
//# sourceMappingURL=middleware.js.map