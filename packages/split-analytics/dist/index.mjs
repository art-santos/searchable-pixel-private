var c={GPTBot:{name:"GPTBot",company:"OpenAI",category:"ai-training"},"ChatGPT-User":{name:"ChatGPT-User",company:"OpenAI",category:"ai-assistant"},"OAI-SearchBot":{name:"OAI-SearchBot",company:"OpenAI",category:"ai-search"},"Claude-Web":{name:"Claude-Web",company:"Anthropic",category:"ai-assistant"},ClaudeBot:{name:"ClaudeBot",company:"Anthropic",category:"ai-training"},"anthropic-ai":{name:"anthropic-ai",company:"Anthropic",category:"ai-training"},"Google-Extended":{name:"Google-Extended",company:"Google",category:"ai-training"},Googlebot:{name:"Googlebot",company:"Google",category:"search-ai"},"Googlebot-Image":{name:"Googlebot-Image",company:"Google",category:"search-ai"},"Googlebot-News":{name:"Googlebot-News",company:"Google",category:"search-ai"},Bingbot:{name:"Bingbot",company:"Microsoft",category:"search-ai"},msnbot:{name:"msnbot",company:"Microsoft",category:"search-ai"},BingPreview:{name:"BingPreview",company:"Microsoft",category:"search-ai"},PerplexityBot:{name:"PerplexityBot",company:"Perplexity",category:"ai-search"},FacebookBot:{name:"FacebookBot",company:"Meta",category:"social-ai"},facebookexternalhit:{name:"facebookexternalhit",company:"Meta",category:"social-ai"},"Meta-ExternalAgent":{name:"Meta-ExternalAgent",company:"Meta",category:"ai-training"},YouBot:{name:"YouBot",company:"You.com",category:"ai-search"},Neeva:{name:"Neeva",company:"Neeva",category:"ai-search"},Phind:{name:"Phind",company:"Phind",category:"ai-search"},Bytespider:{name:"Bytespider",company:"ByteDance",category:"ai-training"},Baiduspider:{name:"Baiduspider",company:"Baidu",category:"search-ai"},Sogou:{name:"Sogou",company:"Sogou",category:"search-ai"},Amazonbot:{name:"Amazonbot",company:"Amazon",category:"ai-assistant"},LinkedInBot:{name:"LinkedInBot",company:"LinkedIn",category:"social-ai"},Twitterbot:{name:"Twitterbot",company:"Twitter",category:"social-ai"},Applebot:{name:"Applebot",company:"Apple",category:"search-ai"},"Applebot-Extended":{name:"Applebot-Extended",company:"Apple",category:"ai-training"},Diffbot:{name:"Diffbot",company:"Diffbot",category:"ai-extraction"},DataForSeoBot:{name:"DataForSeoBot",company:"DataForSEO",category:"ai-extraction"},SemrushBot:{name:"SemrushBot",company:"Semrush",category:"ai-extraction"},AhrefsBot:{name:"AhrefsBot",company:"Ahrefs",category:"ai-extraction"},CCBot:{name:"CCBot",company:"Common Crawl",category:"ai-training"},ia_archiver:{name:"ia_archiver",company:"Internet Archive",category:"archival"},PetalBot:{name:"PetalBot",company:"Petal Search",category:"search-ai"},SeznamBot:{name:"SeznamBot",company:"Seznam",category:"search-ai"},Yandex:{name:"YandexBot",company:"Yandex",category:"search-ai"},DuckDuckBot:{name:"DuckDuckBot",company:"DuckDuckGo",category:"search-ai"},Qwantify:{name:"Qwantify",company:"Qwant",category:"search-ai"}};function i(a){if(!a)return null;for(let[e,t]of Object.entries(c))if(a.includes(e))return t;return null}var r=class{constructor(e){if(!e.apiKey)throw new Error("[Split Analytics] API key is required");if(!e.apiKey.startsWith("split_live_")&&!e.apiKey.startsWith("split_test_"))throw new Error('[Split Analytics] Invalid API key format. Keys should start with "split_live_" or "split_test_"');this.config={apiKey:e.apiKey,apiEndpoint:e.apiEndpoint||(process.env.NODE_ENV==="development"?"http://localhost:3000/api":"https://split.dev/api"),debug:e.debug||!1},this.config.debug&&console.log("[Split Analytics] Initialized with:",{endpoint:this.config.apiEndpoint,keyType:e.apiKey.startsWith("split_test_")?"test":"live",debug:this.config.debug})}async ping(){try{if(!this.config.apiKey.startsWith("split_live_")&&!this.config.apiKey.startsWith("split_test_"))return{status:"error",message:'Invalid API key format. Keys should start with "split_live_" or "split_test_"'};let e=await fetch(`${this.config.apiEndpoint}/ping`,{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json","User-Agent":"@split.dev/analytics npm package"}});if(!e.ok){let n;try{let o=await e.json();n=o.message||o.error||`HTTP ${e.status}`}catch{switch(e.status){case 401:n="Invalid API key. Check your key in the Split Analytics dashboard.";case 403:n="API key access denied. Verify your key has the correct permissions.";break;case 404:n="API endpoint not found. This might be a temporary issue with the Split Analytics service.";break;case 429:n="Rate limit exceeded. Please wait a moment and try again.";break;case 500:n="Split Analytics server error. Please try again later.";break;default:n=`HTTP ${e.status}: ${e.statusText}`}}return this.config.debug&&console.error("[Split Analytics] Ping failed:",{status:e.status,statusText:e.statusText,url:`${this.config.apiEndpoint}/ping`,apiKeyPrefix:this.config.apiKey.substring(0,12)+"..."}),{status:"error",message:n}}let t=await e.json();return this.config.debug&&console.log("[Split Analytics] Ping successful:",t),t}catch(e){let t;return e instanceof TypeError&&e.message.includes("fetch")?t="Network error: Unable to connect to Split Analytics. Check your internet connection.":e instanceof Error?t=`Connection error: ${e.message}`:t="Unknown connection error",this.config.debug&&console.error("[Split Analytics] Ping failed:",{error:e,endpoint:`${this.config.apiEndpoint}/ping`,apiKeyPrefix:this.config.apiKey.substring(0,12)+"..."}),{status:"error",message:t,timestamp:new Date().toISOString()}}}async track(e){try{let t={...e,timestamp:new Date().toISOString()};this.config.debug&&console.log("[Split Analytics] Tracking visit:",{url:t.url,crawler:t.crawler?.name,userAgent:t.userAgent.substring(0,50)+"..."});let n=await fetch(`${this.config.apiEndpoint}/crawler-events`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json","User-Agent":"@split.dev/analytics npm package"},body:JSON.stringify({events:[t]})});return n.ok?(this.config.debug&&console.log("[Split Analytics] Successfully tracked:",t.crawler?.name||"unknown crawler"),!0):(this.config.debug&&console.error("[Split Analytics] Track failed:",{status:n.status,statusText:n.statusText,url:t.url,crawler:t.crawler?.name}),!1)}catch(t){return this.config.debug&&console.error("[Split Analytics] Track error:",{error:t instanceof Error?t.message:t,url:e.url,crawler:e.crawler?.name}),!1}}async autoTrack(e){let t=i(e.userAgent);return t?(this.config.debug&&console.log("[Split Analytics] Auto-detected crawler:",t.name),this.track({url:e.url,userAgent:e.userAgent||"",crawler:t,metadata:{method:e.method,statusCode:e.statusCode,responseTime:e.responseTime}})):(this.config.debug&&console.log("[Split Analytics] No crawler detected in user agent:",e.userAgent?.substring(0,50)+"..."),!1)}isAICrawler(e){return i(e)!==null}getCrawlerInfo(e){return i(e)}};function m(a){return new r(a)}async function l(a){return new r(a).ping()}async function u(a,e){return new r(a).track(e)}function p(a){return i(a)!==null}function g(a){return i(a)}async function y(a){let e={packageImport:!0,crawlerDetection:!1,apiConnection:!1,apiConnectionDetails:void 0};try{let t="Mozilla/5.0 (compatible; GPTBot/1.0; +https://openai.com/gptbot)",n=p(t),o=g(t);if(e.crawlerDetection=n&&o?.name==="GPTBot",a?.apiKey){let s=await l({apiKey:a.apiKey,apiEndpoint:a.apiEndpoint,debug:a.debug});e.apiConnection=s.status==="ok",e.apiConnectionDetails=s}}catch{}return e}export{r as SplitAnalytics,m as createSplit,g as getCrawlerInfo,p as isAICrawler,l as ping,y as testInstallation,u as track};
//# sourceMappingURL=index.mjs.map